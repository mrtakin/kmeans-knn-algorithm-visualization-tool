
package algorithmvisualization.view;

import algorithmvisualization.AlgorithmType;
import algorithmvisualization.NearestNeighbour;
import algorithmvisualization.SelectMode;
import algorithmvisualization.ShapeType;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Murat AKIN
 */
public class ToolPanel extends javax.swing.JPanel {

    CanvasPanel canvasPanel;

    JFrame fillFrame;
    FillPanel fillPanel;

    JFrame outputFrame;
    OutputPanel outputPanel;

    /**
     * Creates new form ToolPanel
     */
    public ToolPanel() {
        initComponents();

        //JTextPanel Output Panel Construct
        outputFrame = new JFrame();
        outputPanel = new OutputPanel();
        outputFrame.add(outputPanel);

        outputFrame.setSize(517, 305);
        outputFrame.setLocation(outputPanel.scrSize.width / 2 - outputFrame.getWidth() / 2,
                outputPanel.scrSize.height / 2 - outputFrame.getHeight() / 2);

        disableControlBarComponents();
    }

    public void setCanvasPanel(CanvasPanel canvasPanel) {
        this.canvasPanel = canvasPanel;
    }

    public void disableControlBarComponents() {
        playButton.setEnabled(false);
        stepButton.setEnabled(false);
        pauseButton.setEnabled(false);
        stopButton.setEnabled(false);
    }

    public void enableControlBarComponents() {
        playButton.setEnabled(true);
        stepButton.setEnabled(true);
        pauseButton.setEnabled(true);
        stopButton.setEnabled(true);
    }
    
    public void appendStringToOutput(String str) {
        outputPanel.appendString(str);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        shapesLabel = new javax.swing.JLabel();
        selectModeLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        controlBarLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        fillButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        canvasLabel = new javax.swing.JLabel();
        algorithmsLabel = new javax.swing.JLabel();
        outputButton = new javax.swing.JButton();
        pointButton = new javax.swing.JButton();
        clusterButton = new javax.swing.JButton();
        singleSelectButton = new javax.swing.JButton();
        multipleSelectButton = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        stepButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        speedSlider = new javax.swing.JSlider();
        kmeansToggleButton = new javax.swing.JToggleButton();
        nearstNeighbourToggleButton = new javax.swing.JToggleButton();
        pauseButton = new javax.swing.JButton();

        jSlider1.setPreferredSize(new java.awt.Dimension(50, 54));

        shapesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shapesLabel.setText("Shapes");

        selectModeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectModeLabel.setText("Select Mode");

        controlBarLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        controlBarLabel.setText("Control Bar");

        fillButton.setText("Fill");
        fillButton.setToolTipText("Fill Canvas With Shapes");
        fillButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.setToolTipText("Clear the Canvas");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.setMaximumSize(new java.awt.Dimension(31, 29));
        clearButton.setMinimumSize(new java.awt.Dimension(31, 29));
        clearButton.setPreferredSize(new java.awt.Dimension(31, 29));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        canvasLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        canvasLabel.setText("Canvas");
        canvasLabel.setToolTipText("");

        algorithmsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        algorithmsLabel.setText("Algorithms");
        algorithmsLabel.setToolTipText("");

        outputButton.setText("Output");
        outputButton.setToolTipText("Show the Output Screen");
        outputButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        outputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputButtonActionPerformed(evt);
            }
        });

        pointButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/circle-icon.png"))); // NOI18N
        pointButton.setToolTipText("Point Shape");
        pointButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pointButton.setContentAreaFilled(false);
        pointButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointButtonActionPerformed(evt);
            }
        });

        clusterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/square-icon.png"))); // NOI18N
        clusterButton.setToolTipText("Cluster Shape");
        clusterButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        clusterButton.setContentAreaFilled(false);
        clusterButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clusterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clusterButtonActionPerformed(evt);
            }
        });

        singleSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/single-selection-icon.png"))); // NOI18N
        singleSelectButton.setToolTipText("Single Selection Mode");
        singleSelectButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        singleSelectButton.setContentAreaFilled(false);
        singleSelectButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        singleSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleSelectButtonActionPerformed(evt);
            }
        });

        multipleSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/multiple-selection-icon.png"))); // NOI18N
        multipleSelectButton.setToolTipText("Multiple Selection Mode");
        multipleSelectButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        multipleSelectButton.setContentAreaFilled(false);
        multipleSelectButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        multipleSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multipleSelectButtonActionPerformed(evt);
            }
        });

        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/play-icon.png"))); // NOI18N
        playButton.setToolTipText("Start");
        playButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        playButton.setContentAreaFilled(false);
        playButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        stepButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/next-icon.png"))); // NOI18N
        stepButton.setToolTipText("Next Step");
        stepButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        stepButton.setContentAreaFilled(false);
        stepButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepButtonActionPerformed(evt);
            }
        });

        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stop-icon.png"))); // NOI18N
        stopButton.setToolTipText("Stop");
        stopButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        stopButton.setContentAreaFilled(false);
        stopButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        speedSlider.setMaximum(500);
        speedSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        speedSlider.setPreferredSize(new java.awt.Dimension(50, 54));
        speedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                speedSliderStateChanged(evt);
            }
        });

        kmeansToggleButton.setText("K-Means");
        kmeansToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kmeansToggleButtonActionPerformed(evt);
            }
        });

        nearstNeighbourToggleButton.setText("Nearest N.");
        nearstNeighbourToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nearstNeighbourToggleButtonActionPerformed(evt);
            }
        });

        pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pause-icon.png"))); // NOI18N
        pauseButton.setToolTipText("Pause");
        pauseButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pauseButton.setContentAreaFilled(false);
        pauseButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(shapesLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(selectModeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(canvasLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(algorithmsLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(controlBarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(singleSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(multipleSelectButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fillButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator3)
                            .addComponent(jSeparator4)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator1)
                            .addComponent(outputButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(speedSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kmeansToggleButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nearstNeighbourToggleButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(pointButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clusterButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(playButton)
                        .addGap(2, 2, 2)
                        .addComponent(stepButton)
                        .addGap(1, 1, 1)
                        .addComponent(pauseButton)
                        .addGap(2, 2, 2)
                        .addComponent(stopButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(shapesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pointButton)
                    .addComponent(clusterButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectModeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(singleSelectButton)
                    .addComponent(multipleSelectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(canvasLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fillButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(algorithmsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kmeansToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nearstNeighbourToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(speedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(controlBarLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stepButton)
                    .addComponent(playButton)
                    .addComponent(pauseButton)
                    .addComponent(stopButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointButtonActionPerformed
        canvasPanel.setShapeMode(ShapeType.POINT);
    }//GEN-LAST:event_pointButtonActionPerformed

    private void clusterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clusterButtonActionPerformed
        canvasPanel.setShapeMode(ShapeType.CLUSTER);
    }//GEN-LAST:event_clusterButtonActionPerformed

    private void singleSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleSelectButtonActionPerformed
        canvasPanel.setSelectionMode(SelectMode.SINGLE);
    }//GEN-LAST:event_singleSelectButtonActionPerformed

    private void multipleSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multipleSelectButtonActionPerformed
        canvasPanel.setSelectionMode(SelectMode.MULTIPLE);
    }//GEN-LAST:event_multipleSelectButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        canvasPanel.clearCanvas();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void fillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillButtonActionPerformed
        if (fillFrame == null) {
            fillFrame = new JFrame();
            fillPanel = new FillPanel(this);
            fillFrame.add(fillPanel);

            fillFrame.setSize(345, 213);
            fillFrame.setLocation(fillPanel.scrSize.width / 2 - fillFrame.getWidth() / 2,
                    fillPanel.scrSize.height / 2 - fillFrame.getHeight() / 2);

            fillFrame.setVisible(true);
        } else {
            fillPanel.clearInputValues();
            fillFrame.setVisible(true);
        }
    }//GEN-LAST:event_fillButtonActionPerformed

    private void kmeansToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kmeansToggleButtonActionPerformed
        if (canvasPanel.getPointNumber() < 1 || canvasPanel.getClusterNumber() < 1) {
            JOptionPane.showMessageDialog(this,
                    "Cannot find any point or/and cluster in canvas.");
            kmeansToggleButton.setSelected(false);
            return;
        }

        nearstNeighbourToggleButton.setSelected(false);

        kmeansToggleButton.setSelected(true);
        canvasPanel.setAlgorithm(AlgorithmType.KMEANS);

        canvasPanel.ready(AlgorithmType.KMEANS);

        speedSlider.setValue(speedSlider.getMaximum() - canvasPanel.getSpeed());

        enableControlBarComponents();
    }//GEN-LAST:event_kmeansToggleButtonActionPerformed

    private void nearstNeighbourToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nearstNeighbourToggleButtonActionPerformed
        if (canvasPanel.getPointNumber() < 1) {
            JOptionPane.showMessageDialog(this,
                    "Cannot find any point in canvas.");
            nearstNeighbourToggleButton.setSelected(false);
            return;
        } else if (!canvasPanel.isPointSelected()) {
            JOptionPane.showMessageDialog(this,
                    "Should choose a start point in canvas");
            nearstNeighbourToggleButton.setSelected(false);
            return;
        }

        kmeansToggleButton.setSelected(false);

        nearstNeighbourToggleButton.setSelected(true);
        canvasPanel.setAlgorithm(AlgorithmType.NEAREST_NEIGHBOUR);

        canvasPanel.clearClusters();
        canvasPanel.ready(AlgorithmType.NEAREST_NEIGHBOUR);

        speedSlider.setValue(speedSlider.getMaximum() - canvasPanel.getSpeed());

        enableControlBarComponents();
    }//GEN-LAST:event_nearstNeighbourToggleButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        if (!canvasPanel.isReady()) {
            return;
        }

        canvasPanel.start();
    }//GEN-LAST:event_playButtonActionPerformed

    private void stepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepButtonActionPerformed
        if (!canvasPanel.isReady()) {
            return;
        }

        canvasPanel.step();
    }//GEN-LAST:event_stepButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        if (!canvasPanel.isReady()) {
            return;
        }

        canvasPanel.stop();

        kmeansToggleButton.setSelected(false);
        nearstNeighbourToggleButton.setSelected(false);
        disableControlBarComponents();

        canvasPanel.setAlgorithm(null);
    }//GEN-LAST:event_stopButtonActionPerformed

    private void speedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_speedSliderStateChanged
        int speed = speedSlider.getMaximum() - speedSlider.getValue();

        canvasPanel.setSpeed(speed);
    }//GEN-LAST:event_speedSliderStateChanged

    private void outputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputButtonActionPerformed
//        if (outputFrame == null) {
//            outputFrame = new JFrame();
//            outputPanel = new OutputPanel();
//            outputFrame.add(outputPanel);
//
//            outputFrame.setSize(517, 305);
//            outputFrame.setLocation(outputPanel.scrSize.width / 2 - outputFrame.getWidth() / 2,
//                    outputPanel.scrSize.height / 2 - outputFrame.getHeight() / 2);
//
//            outputFrame.setVisible(true);
//        } else {
        outputFrame.setVisible(true);
//        }
    }//GEN-LAST:event_outputButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        if (!canvasPanel.isReady()) {
            return;
        }

        canvasPanel.stop();
    }//GEN-LAST:event_pauseButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel algorithmsLabel;
    private javax.swing.JLabel canvasLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clusterButton;
    private javax.swing.JLabel controlBarLabel;
    private javax.swing.JButton fillButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JToggleButton kmeansToggleButton;
    private javax.swing.JButton multipleSelectButton;
    private javax.swing.JToggleButton nearstNeighbourToggleButton;
    private javax.swing.JButton outputButton;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton playButton;
    private javax.swing.JButton pointButton;
    private javax.swing.JLabel selectModeLabel;
    private javax.swing.JLabel shapesLabel;
    private javax.swing.JButton singleSelectButton;
    private javax.swing.JSlider speedSlider;
    private javax.swing.JButton stepButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
